/*
From Wikipedia - 
Euclid's formula is a fundamental formula for generating Pythagorean triples given an arbitrary pair of integers m and n with m > n > 0. 
The formula states that the integers a=m^2-n^2, b=2mn, c=m^2+n^2 form a Pythagorean triple. 
The triple generated by Euclid's formula is primitive if and only if m and n are coprime and not both odd.
All multiples of this triple are also triples. Hence simply multiplying these values by 2,3,4 will give us the other triples from the same primitive.
In simpler terms, just adding the total of a+b+c till it is less than the limit (1.5M), we can get all triples.

We know c = m^2+n^2, and also m>n (for m^2-n^2 to be positive), so max value of m will be root(L/2).
*/
import java.io.*;
import java.lang.*;
import java.math.*;
import java.util.*;
class PE75 {
    public static void main(String args[])throws Exception {
        int a,b,c,m,n,l;
        long startTime = System.currentTimeMillis();
        int result=0;
        int limit = (int)Math.sqrt(1500000/2);
        int count[] = new int[1500001]; //the location stores the number of solutions for a particular value of L
        for(m=2;m<limit;m++) {
            for(n=1;n<m;n++) {
                if(gcd(m,n)==1 && (m+n)%2==1) { //the condition for primitives as mentioned above
                    a = m*m - n*n;
                    b = 2*m*n;
                    c = m*m + n*n;
                    l = a+b+c;
                    while(l<=1500000) {
                        count[l]++;
                        if(count[l]==1) result++;
                        if(count[l]==2)  result--;  //if a previous result existed for l just remove it from the list
                                                    //if there are more than 2 solutions, it will do nothing  

                        l+=a+b+c;
                    }
                }
            }
        }
        long endTime = System.currentTimeMillis();
        System.out.println("Total number of solutions: "+result);
        System.out.println("Total execution time: "+(endTime-startTime)+"ms");
    }

    public static int gcd(int a, int b) {
        int i;
        for(i=2;i<=Math.min(a,b);i++)
            if(a%i==0 && b%i==0) return i;
        return 1;
    }
}